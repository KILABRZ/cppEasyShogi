easy design map

Flask server

	index_page/
		Register, Login system : Use token to keep login data (at cookie)
	my_page/
		Use login information, to extract user metadata in database,
		then render it on to the page
	random_room/
	assign_room/
		A interface between client and game server
		It will receive some data to render the game,
		communicate with Game server to complete the game

Game server

	a shogi game server with a matchup system.
	every game is a independant process, has an id.
	game server run the game, return the board information,
	and flag the error if something weird happen.


ClientA --> Queueing request to Flask server --> Queueing request to Game server
ClientB --> Queueing request to Flask server --> Queueing request to Game server

Flask server --> Hello to ClientA, render game interface on page
Flask server --> Hello to ClientB, render game interface on page

ClientA make a move with javascript based interface.
Python flask server read the move, send the move to the Game server,
the game server return if the move is vaild, 
if it is, return the new board information to Flask server to render it on both board.

